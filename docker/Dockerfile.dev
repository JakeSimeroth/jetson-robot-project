# Development Dockerfile for Jetson Robot Project
FROM nvcr.io/nvidia/l4t-pytorch:r35.2.1-pth2.0-py3

# Set working directory
WORKDIR /app

# Set environment variables
ENV PYTHONPATH=/app
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies including development tools
RUN apt-get update && apt-get install -y \
    python3-pip \
    python3-dev \
    python3-opencv \
    libopencv-dev \
    pkg-config \
    cmake \
    build-essential \
    git \
    curl \
    wget \
    nano \
    vim \
    htop \
    tree \
    v4l-utils \
    i2c-tools \
    gpio \
    gdb \
    valgrind \
    strace \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
RUN pip3 install --no-cache-dir -r requirements.txt

# Install development dependencies
RUN pip3 install --no-cache-dir \
    jetson-stats \
    jetson-gpio \
    jupyter \
    jupyterlab \
    ipython \
    debugpy \
    python-language-server \
    autopep8 \
    pylint

# Set up Jupyter configuration
RUN mkdir -p /root/.jupyter && \
    jupyter lab --generate-config && \
    echo "c.ServerApp.allow_root = True" >> /root/.jupyter/jupyter_lab_config.py && \
    echo "c.ServerApp.ip = '0.0.0.0'" >> /root/.jupyter/jupyter_lab_config.py && \
    echo "c.ServerApp.port = 8888" >> /root/.jupyter/jupyter_lab_config.py && \
    echo "c.ServerApp.token = ''" >> /root/.jupyter/jupyter_lab_config.py && \
    echo "c.ServerApp.password = ''" >> /root/.jupyter/jupyter_lab_config.py

# Create development directories
RUN mkdir -p /app/notebooks /app/experiments /app/models /app/logs

# Set permissions for GPIO access
RUN groupadd -f gpio && \
    usermod -a -G gpio root

# Copy development scripts
COPY docker/dev-entrypoint.sh /dev-entrypoint.sh
RUN chmod +x /dev-entrypoint.sh

# Expose ports for development
EXPOSE 8080 8888 5000

# Default command for development
CMD ["/dev-entrypoint.sh"]